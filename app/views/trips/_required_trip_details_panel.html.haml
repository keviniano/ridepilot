.panel.panel-primary#required_fields_panel
  .panel-heading
    %h3.panel-title
      = translate_helper(:required_trip_details_panel)
  .panel-body{style: 'padding: 5px;'}
    .form-group.col-sm-12
      %label.col-sm-3
        = translate_helper("customer")
      .col-sm-9{style: 'white-space: nowrap;'}
        - if @is_repeating_trip
          = render "trips/customer", :f => f, :trip => @trip, edit_mode: edit_mode, prefix: 'repeating_'
        - else
          = render "trips/customer", :f => f, :trip => @trip, edit_mode: edit_mode, prefix: ''
        
    -# PICKUP AND APPOINTMENT TIME DATE AND TIME PICKERS
    - unless @is_repeating_trip
      .form-group.col-sm-12
        .col-sm-3
          = f.label :date, translate_helper("date")
        .col-sm-9
          .input-group.datepicker-icon
            = f.text_field :date,
              :size => 10,
              value: format_time_for_listing_day(@trip.date),
              class: 'datepicker form-control',
              readonly: true
            .input-group-btn
              %button.btn.btn-default{:type => "button"}
                = image_tag "calendar-clock.png"
    .form-group.col-sm-12
      .col-sm-3
        = f.label :pickup_time, translate_helper("pickup_time")
      .col-sm-9
        = render 'shared/time_inputs', field_name: :pickup_time, time: @trip.pickup_time, f: f
    .form-group.col-sm-12
      .col-sm-3
        = f.label :appointment_time, translate_helper("appointment_time")
      .col-sm-9
        = render 'shared/time_inputs', field_name: :appointment_time, time: @trip.appointment_time, f: f, required: false
    - if edit_mode != :show  # JavaScript for generating date and time pickers
      = render "shared/date_time_picker_javascript"
      :javascript
        $(document).ready(function() {
          makeDatePickers();
        });

    .form-group.col-sm-12.place-picker-div
      .col-sm-3
        = f.label :pickup_address_label, translate_helper("pickup_address")
      .col-sm-9
        .form-inline.address_container
          - is_pickup_latlng_coded = @trip.pickup_address.try(:coded_by_lat_lng?) 
          - is_pickup_latlng = is_pickup_latlng_coded || !params[:trip_pickup_lat].blank? || !params[:trip_pickup_lon].blank?
          .latlng_fields{style: is_pickup_latlng ? "" : 'display: none;'}
            = number_field_tag "trip_pickup_lat", (is_pickup_latlng_coded && @trip.pickup_address.try(:latitude)) || params[:trip_pickup_lat], class: "form-control", placeholder: "laitudue", min: -90, max: 90, style: 'width: 40%;'
            = number_field_tag "trip_pickup_lon", (is_pickup_latlng_coded && @trip.pickup_address.try(:longitude)) || params[:trip_pickup_lon], class: "form-control", placeholder: "longitude", min: -180, max: 180, style: 'width: 40%;'
          .address_fields{style: is_pickup_latlng ? 'display: none;' : ""}
            = text_field_tag "pickup_address", (!is_pickup_latlng && @trip.pickup_address.try(:one_line_text)) || params[:pickup_address], class: "form-control trip-address-picker", style: "width: 100%;"

          .pull-right
            %label.pull-right
              %input.latlng_address_switch{type: 'checkbox', checked: ("true" if is_pickup_latlng)}
              Lat/Lon
          - if edit_mode != :show  
            = f.hidden_field :pickup_address_id, class: 'trip_pickup_address_id'
            = hidden_field_tag 'trip_pickup_google_address', params[:trip_pickup_google_address], class: 'trip_pickup_google_address'

    .form-group.col-sm-12.place-picker-div
      .col-sm-3
        = f.label :dropoff_address_label, translate_helper("dropoff_address")
      .col-sm-9
        .form-inline.address_container
          - is_dropoff_latlng_coded = @trip.dropoff_address.try(:coded_by_lat_lng?)
          - is_dropoff_latlng = is_dropoff_latlng_coded || !params[:trip_dropoff_lat].blank? || !params[:trip_dropoff_lon].blank?
          .latlng_fields{style: is_dropoff_latlng ? "" : 'display: none;'}
            = number_field_tag "trip_dropoff_lat", (is_dropoff_latlng_coded && @trip.dropoff_address.try(:latitude)) || params[:trip_dropoff_lat], class: "form-control", placeholder: "laitudue", min: -90, max: 90, style: 'width: 40%;'
            = number_field_tag "trip_dropoff_lon", (is_dropoff_latlng_coded && @trip.dropoff_address.try(:longitude)) || params[:trip_dropoff_lon], class: "form-control", placeholder: "longitude", min: -180, max: 180, style: 'width: 40%;'
          .address_fields{style: is_dropoff_latlng ? 'display: none;' : ""}
            = text_field_tag "dropoff_address", (!is_dropoff_latlng && @trip.dropoff_address.try(:one_line_text)) || params[:dropoff_address], class: "form-control trip-address-picker", style: "width: 100%;"

          .pull-right
            %label.pull-right
              %input.latlng_address_switch{type: 'checkbox', checked: ("true" if is_dropoff_latlng)}
              Lat/Lon

          - if edit_mode != :show
            = f.hidden_field :dropoff_address_id, class: 'trip_dropoff_address_id'
            = hidden_field_tag 'trip_dropoff_google_address', params[:trip_dropoff_google_address], class: 'trip_dropoff_google_address'

    .form-group.col-sm-12
      .col-sm-3
        = f.label :trip_purpose, translate_helper("trip_purpose")
      .col-sm-9
        = f.select :trip_purpose_id, @trip_purposes.map { |tp| [tp.name, tp.id] }, {:include_blank => true}, {class: 'form-control trip_purpose_id'}

= render 'addresses/latlng_address_switch_js'

:javascript
  $(function() {
    // initialize place picker
    var geocoder_bounds = #{Utility.new.get_provider_bounds(current_provider).try(:to_json) || {}};
    init_place_picker(
      ".trip-address-picker",
      geocoder_bounds
    );
  });