:ruby
  assignments = run.weekday_assignments.for_wday(@day_of_week)
  trips = RepeatingTrip.where(id: assignments.pluck(:repeating_trip_id))
.panel.panel-success.run_trips_panel{id: "run_trips_panel_#{run.id}", data: {run_id: run.id}}
  .panel-heading
    .pull-right{style: 'padding-right: 0px;'}
      = render 'unschedule_trip_dropdown'
      - if assignments.any?
        %span.dispatch-action
          = link_to batch_update_daily_dispatch_action_recurring_dispatchers_path(run_id: run.id), remote: true, style: 'color: red;', title: "Apply manifest to daily runs" , data: {confirm: 'Have you finished trip scheduling for this run? Clicking this would apply the manifest to all daily runs. You can only use this button once.'}, class: 'batch_update_daily_dispatch_action' do 
            %i.fa.fa-check-circle-o
      - if can?(:cancel, run)  
        %span.dispatch-action
          = link_to cancel_run_recurring_dispatchers_path(run_id: run.id), title: 'Cancel run', style: 'color: white;', remote: true, data: {confirm: run_cancel_warning(run)} do 
            %i.fa.fa-power-off
      %span.dispatch-action
        = link_to repeating_run_path(run, from_dispatch: true), style: 'color: white;', title: "View details" do 
          %i.fa.fa-external-link
      - if can?(:edit, run)
        %span.dispatch-action
          = link_to edit_repeating_run_path(run, from_dispatch: true), style: 'color: white;', title: 'Edit' do 
            %i.fa.fa-pencil
      %span.panel-close.dispatch-action{title: 'Close'}
        %i.fa.fa-remove
      %span.panel-expand-collapse.dispatch-action{title: 'Collapse/expand'}
        %i.fa.fa-chevron-up
    %h3.panel-title.text-center
      .pull-left
        = run.name
      %span.run_summary{style: 'font-size: small;'}
        = simple_format recurring_run_summary(run, @day_of_week)
  .panel-body.vertical-resizable-panel
    = render 'recurring_dispatchers/run_manifest_table', run: run, trips: trips

:javascript
  $("#run_trips_panel_#{run.id}").droppable({
    tolerance: 'pointer',
    hoverClass: "drop-zone-active",
    over: function(e, ui) {
      $("#run_trips_panel_#{run.id}").addClass("drop-zone-active");
    },
    drop: function(e, ui) {
      var source_panel = ui.draggable.parents('.panel');
      var prev_run_id = source_panel.data('run-id');
      var trip_id = null;
      if(prev_run_id) {
        trip_id = ui.draggable.data('trip-id');
      } else {
        trip_id = ui.draggable.parents('tr').data('trip-id');
      }
      var run_id = #{run.id};
      if(prev_run_id == run_id) {
        setTimeout(function() {
          var new_manifest_order = [];
          source_panel.find('table tr.manifest-row').each(function(tr) {
            new_manifest_order.push($(this).data('id'));
          });
          // same run, itinerary sequence change
          var leg_flag = ui.draggable.data('leg-flag');
          var itin_id = ui.draggable.data('id');
          current_itin_index = new_manifest_order.indexOf(itin_id);

          var is_pickup = (leg_flag == '1');
          var the_other_leg_flag = (is_pickup ? '2' : '1');
          other_itin_index = new_manifest_order.indexOf("trip_" + trip_id + "_leg_" + the_other_leg_flag);
          if(is_pickup && other_itin_index < current_itin_index) {
            $("#run_trips_panel_" + run_id + " table tbody").sortable('cancel');
            bootbox.alert('Pickup cannot be scheduled after the dropoff');
          } else if(!is_pickup && current_itin_index < other_itin_index) {
            $("#run_trips_panel_" + run_id + " table tbody").sortable('cancel');
            bootbox.alert('Dropoff cannot be scheduled before the pickup');
          } else {
            change_run_manifest_order(run_id, new_manifest_order);
          }
          }, 300);
      } else {
        schedule_trip(trip_id, run_id, prev_run_id);
      }
    }
  });

  $("#run_trips_panel_#{run.id} table tbody").sortable();

  // fixed table header
  $("#run_trips_panel_#{run.id} table").floatThead({ 
    scrollContainer: function($table){
      return $table.closest('.panel-body');
    }
  });